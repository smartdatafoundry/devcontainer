name: Build and Publish Dev Container

on:
  push:
    branches:
      - main
    paths:
      - '.devcontainer/**'
      - '.github/workflows/build-devcontainer.yml'
  pull_request:
    branches:
      - main
    paths:
      - '.devcontainer/**'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: smartdatafoundry/devcontainer-python

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and publish dev container
        uses: devcontainers/ci@v0.3
        with:
          imageName: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          imageTag: ${{ join(fromJSON(steps.meta.outputs.json).tags, ',') }}
          cacheFrom: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          push: filter
          refFilterForPush: refs/heads/main
          # Test the container with a simple validation
          runCmd: |
            echo "=== Testing dev container ==="
            echo "Python: $(python3 --version)"
            echo "Git: $(git --version)"
            echo "Pip: $(pip3 --version)"
            
            # Test Python import
            python3 -c "import sys; print(f'Python executable: {sys.executable}')"
            
            # Test if common development tools are available
            if command -v zsh &> /dev/null; then
              echo "Zsh: $(zsh --version)"
            fi
            
            if command -v quarto &> /dev/null; then
              echo "Quarto: $(quarto --version)"
            else
              echo "Quarto: Not found (this may be expected)"
            fi
            
            echo "=== Dev container validation completed! ==="

      - name: Container info
        if: success()
        run: |
          echo "✅ Dev container built and published successfully!"
          echo "📦 Registry: ${{ env.REGISTRY }}"
          echo "🏷️ Image: ${{ env.IMAGE_NAME }}"
          echo "🆔 Tags: ${{ steps.meta.outputs.tags }}"
          echo "📝 Labels: ${{ steps.meta.outputs.labels }}"
          echo ""
          echo "To use this dev container:"
          echo "1. Reference it in your devcontainer.json:"
          echo '   "image": "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:<tag>"'
          echo "2. Or use it directly with Docker:"
          echo "   docker run --rm -it ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:<tag>"
          echo ""
          echo "Available tags:"
          echo "${{ steps.meta.outputs.tags }}" | tr ',' '\n' | sed 's/^/   - /'
