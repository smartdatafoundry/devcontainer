name: Publish and Build Container

on:
  workflow_call:
    inputs:
      dockerfile:
        required: false
        type: string
        default: Dockerfile
      image-name:
        required: false
        type: string
        default: ${{ github.repository }}
      fail-on-security:
        required: false
        type: string
        default: '0'
        description: 'Exit code for Trivy security scan (0=non-blocking, 1=blocking)'

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.8.0
        with:
          images: ghcr.io/${{ inputs.image-name }}
          tags: |
            type=sha,format=short
            type=ref,event=branch
            type=ref,event=pr
            type=ref,event=tag

      - name: Build Container
        id: build
        uses: docker/build-push-action@v6.18.0
        with:
          context: .
          file: ${{ inputs.dockerfile }}
          push: false
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Get first tag for scanning
        id: first-tag
        run: |
          FIRST_TAG=$(echo '${{ steps.meta.outputs.tags }}' | head -n1)
          echo "tag=$FIRST_TAG" >> $GITHUB_OUTPUT
          echo "Using tag for scan: $FIRST_TAG"

      - name: Security Scan (Trivy)
        id: security-scan
        uses: smartdatafoundry/trivy-security-scan@v1.0.0
        with:
          image-ref: ${{ steps.first-tag.outputs.tag }}
          registry: ghcr.io
          severity: 'CRITICAL,HIGH'
          detailed-severity: 'CRITICAL,HIGH,MEDIUM,LOW'
          ignore-unfixed: 'true'
          exit-code: ${{ inputs.fail-on-security }}
          artifact-name: 'security-scan-results'
          artifact-retention-days: '30'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          post-pr-comment: 'true'

      - name: Push Container
        id: push
        if: success()
        uses: docker/build-push-action@v6.18.0
        with:
          context: .
          file: ${{ inputs.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v3
        with:
          subject-name: ghcr.io/${{ inputs.image-name }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
